import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'firebase_options.dart';
import 'tela_cadastro.dart';
import 'tela_registro_insulina.dart';
import 'tela_historico.dart';
import 'tela_login.dart';
import 'models/paciente.dart';
import 'services/firestore_service.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  // Initialize Firebase with platform-specific options generated by
  // `flutterfire configure`. If you haven't run that yet, the app will
  // still initialize but you'll need to run the configure command to
  // generate `firebase_options.dart`.
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);
  runApp(const InsuGuiaApp());
}

class InsuGuiaApp extends StatelessWidget {
  const InsuGuiaApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'InsuGuia Mobile',
      theme: ThemeData(
        primarySwatch: Colors.blue,
        scaffoldBackgroundColor: Colors.blue[50],
      ),
      home: StreamBuilder<User?>(
        stream: FirebaseAuth.instance.authStateChanges(),
        builder: (context, snapshot) {
          if (snapshot.connectionState == ConnectionState.waiting) {
            return const Center(child: CircularProgressIndicator());
          }
          
          if (snapshot.hasData && snapshot.data != null) {
            return TelaPrincipal();
          }
          
          return const TelaLogin();
        },
      ),
      debugShowCheckedModeBanner: false,
    );
  }
}

class TelaPrincipal extends StatelessWidget {
  TelaPrincipal({super.key});

  final _firestoreService = FirestoreService();

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('InsuGuia Mobile'),
        centerTitle: true,
        actions: [
          IconButton(
            icon: const Icon(Icons.logout),
            onPressed: () => FirebaseAuth.instance.signOut(),
          ),
        ],
      ),
      body: Column(
        children: [
          const Padding(
            padding: EdgeInsets.all(16.0),
            child: Text(
              'Aplicativo acadêmico para apoio à prescrição de insulina '
              'em pacientes hospitalares (cenário não crítico).',
              textAlign: TextAlign.center,
              style: TextStyle(fontSize: 16),
            ),
          ),
          Expanded(
            child: StreamBuilder<List<Paciente>>(
              stream: _firestoreService.getPacientes(),
              builder: (context, snapshot) {
                if (snapshot.hasError) {
                  return Center(
                    child: Text('Erro: ${snapshot.error}'),
                  );
                }

                if (snapshot.connectionState == ConnectionState.waiting) {
                  return const Center(child: CircularProgressIndicator());
                }

                final pacientes = snapshot.data ?? [];

                if (pacientes.isEmpty) {
                  return const Center(
                    child: Text('Nenhum paciente cadastrado'),
                  );
                }

                return ListView.builder(
                  padding: const EdgeInsets.all(8),
                  itemCount: pacientes.length,
                  itemBuilder: (context, index) {
                    final paciente = pacientes[index];
                    return Card(
                      child: ListTile(
                        title: Text(paciente.nome),
                        subtitle: Text(
                          'Idade: ${paciente.idade} anos\n${paciente.diagnostico}',
                        ),
                        trailing: IconButton(
                          icon: const Icon(Icons.delete),
                          onPressed: () async {
                            final confirma = await showDialog<bool>(
                              context: context,
                              builder: (context) => AlertDialog(
                                title: const Text('Confirmar exclusão'),
                                content: const Text(
                                  'Deseja realmente excluir este paciente?',
                                ),
                                actions: [
                                  TextButton(
                                    onPressed: () =>
                                        Navigator.pop(context, false),
                                    child: const Text('Cancelar'),
                                  ),
                                  TextButton(
                                    onPressed: () => Navigator.pop(context, true),
                                    child: const Text('Excluir'),
                                  ),
                                ],
                              ),
                            );

                            if (confirma == true) {
                              await _firestoreService.deletePaciente(paciente.id);
                              if (context.mounted) {
                                ScaffoldMessenger.of(context).showSnackBar(
                                  const SnackBar(
                                    content: Text('Paciente excluído com sucesso'),
                                  ),
                                );
                              }
                            }
                          },
                        ),
                      ),
                    );
                  },
                );
              },
            ),
          ),
          Padding(
            padding: const EdgeInsets.all(16.0),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceEvenly,
              children: [
                ElevatedButton.icon(
                  icon: const Icon(Icons.person_add),
                  label: const Text('Cadastro de Paciente'),
                  onPressed: () {
                    Navigator.push(context,
                        MaterialPageRoute(builder: (_) => const TelaCadastro()));
                  },
                ),
                ElevatedButton.icon(
                  icon: const Icon(Icons.medication),
                  label: const Text('Registrar Dose'),
                  onPressed: () {
                    Navigator.push(context,
                        MaterialPageRoute(builder: (_) => TelaRegistroInsulina()));
                  },
                ),
                ElevatedButton.icon(
                  icon: const Icon(Icons.history),
                  label: const Text('Histórico'),
                  onPressed: () {
                    Navigator.push(context,
                        MaterialPageRoute(builder: (_) => TelaHistorico()));
                  },
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
